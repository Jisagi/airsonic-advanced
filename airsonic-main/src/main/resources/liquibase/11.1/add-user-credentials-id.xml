<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

    <!-- Step 1: Rename user_credentials to user_credentials_backup -->
    <changeSet id="rename-user_credentials-to-backup" author="kagemomiji">
        <preConditions onFail="HALT">
            <not>
                <primaryKeyExists tableName="user_credentials"/>
            </not>
        </preConditions>
        <renameTable oldTableName="user_credentials" newTableName="user_credentials_backup"/>
    </changeSet>

    <!-- Step 2: Create new user_credentials table -->
    <changeSet id="create-new-user_credentials-table" author="kagemomiji">
        <createTable tableName="user_credentials">
            <column name="id" type="integer" autoIncrement="true">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="username" type="${varchar_type}">
                <!-- Assuming you want the same constraints as before -->
                <constraints nullable="false" referencedTableName="users" referencedColumnNames="username"
                             deleteCascade="true" unique="true" foreignKeyName="uc_us_fk"/>
            </column>
            <column name="app_username" type="${varchar_type}"/>
            <column name="credential" type="${varchar_type}"/>
            <column name="encoder" type="${varchar_type}"/>
            <column name="app" type="${varchar_type}"/>
            <column name="created" type="datetime" defaultValueComputed="CURRENT_TIMESTAMP"/>
            <column name="updated" type="datetime" defaultValueComputed="CURRENT_TIMESTAMP"/>
            <column name="expiration" type="datetime"/>
            <column name="comment" type="${varchar_type}"/>
        </createTable>
    </changeSet>

    <!-- Step 3: Copy data from user_credentials_backup to user_credentials -->
    <changeSet id="copy-data-to-new-user_credentials" author="kagemomiji">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="user_credentials"/>
            </not>
        </preConditions>
        <sql>insert into user_credentials (username, app_username, credential, encoder, app, created, updated, expiration, comment)
             select username, app_username, credential, encoder, app, created, updated, expiration, comment
             from user_credentials_backup
        </sql>
        <rollback>
            <dropTable tableName="user_credentials"/>
            <renameTable oldTableName="user_credentials_backup" newTableName="user_credentials"/>
        </rollback>
    </changeSet>

    <!-- Step 4: Drop the user_credentials_backup table -->
    <changeSet id="drop-user_credentials_backup" author="kagemomiji">
        <dropTable tableName="user_credentials_backup"/>
        <rollback>
            <renameTable oldTableName="user_credentials_backup" newTableName="user_credentials"/>
        </rollback>
    </changeSet>

</databaseChangeLog>
